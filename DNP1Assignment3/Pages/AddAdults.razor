@page "/AddAdults"
@using DNP1Assignment3.Data
@using DNP1Assignment3.Models
@using Microsoft.AspNetCore.Components
@inject IAdultData AdultData
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized Context="Auth">
        <h3 class="warning">Please <a href="Login"> login</a> in order to view this page</h3>
    </NotAuthorized>
    <Authorized Context="Auth">
        <div class="editAdultBox">
            <br/>
            <p class="WelcomeMessageCreate">Please fill the fields:</p>
            <div class="addBox">
                <form class="formDis">
                    <div class="row">
                        <div class="col-md-3">
                            <p class="labels">First Name:</p>
                            <p class="labels">Last Name:</p>
                            <p class="labels">Hair Color:</p>
                            <p class="labels">Eye Color:</p>
                            <p class="labels">Age:</p>
                            <p class="labels">Weight:</p>
                            <p class="labels">Height:</p>
                            <p class="labels">Gender:</p>
                            <p class="labels">Job Title:</p>
                            <p class="labels">Salary:</p>
                        </div>
                        <div class="col-md-9">
                            <input class="inputField" type="text" placeholder="First Name" @bind-value="newAdult.FirstName"/>
                            <input class="inputField" type="text" placeholder="Last Name" @bind-value="newAdult.LastName"/>
                            <input class="inputField" type="text" placeholder="Hair Color" @bind-value="newAdult.HairColor"/>
                            <input class="inputField" type="text" placeholder="Eye Color" @bind-value="newAdult.EyeColor">
                            <input class="inputField" type="number" placeholder="Age" min="18" max="100" @bind-value="newAdult.Age"/>
                            <input class="inputField" type="number" placeholder="Weight" min="0" step="any" @bind-value="newAdult.Weight"/>
                            <input class="inputField" type="number" placeholder="Height" min="0" step="any" @bind-value="newAdult.Height"/>
                            <input class="inputField" type="text" placeholder="Sex" minlength="1" maxlength="1" @bind-value="newAdult.Sex"/>
                            <input class="inputField" type="text" placeholder="Job title" @bind-value="newAdult.JobTitle.JobTitle"/>
                            <input class="inputField" type="number" placeholder="Salary" @bind-value="newAdult.JobTitle.Salary"/>
                        </div>
                    </div>
                </form>
            </div>
            <div class="d-flex justify-content-center AddFBu">
                <a class="submit" type="submit" @onclick="AddAdult">Add To Adults</a>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code 
{
    private Adult newAdult = new Adult(){JobTitle = new Job()};

    private async Task AddAdult()
    {
        try
        {
            await AdultData.AddAdult(newAdult);
            NavigationManager.NavigateTo("/Adults");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    
    }
}